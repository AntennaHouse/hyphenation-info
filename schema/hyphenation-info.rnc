datatypes xsd = "http://www.w3.org/2001/XMLSchema-datatypes"

start = hyphenation-info

hyphenation-info =
  ## Hyphenation exception dictionary
  element hyphenation-info {
     ah-hyphenation-info |
     tex-hyphenation-info
  }

ah-hyphenation-info =
     ah-hyphenation-info.attlist,
     hyphen-char?,
     exceptions?,
     non-eol-words?

tex-hyphenation-info =
  hyphen-char?,
  hyphen-min?,
  classes?,
  ( patterns? & exceptions? )

ah-hyphenation-info.attlist &=
   empty

hyphen-char =
   ## Alternative hyphenation character to <hyphen/> in the <exception> element
   element hyphen-char {
      hyphen-char.attlist,
      empty
}

hyphen-char.attlist &=
   attribute value { text }

exceptions =
   ## Collection of hyphenated words divided by white space
   element exceptions {
      exceptions.attlist,
      (text | hyphen)*
}

exceptions.attlist &=
   empty

hyphen =
   ## Use when the spelling changes when a hyphenation break occurs
   element hyphen {
      hyphen.attlist,
      empty
}

hyphen.attlist &=
   ## String inserted before the hyphenation character when a hyphenation break occurs
   attribute pre { text }?

hyphen.attlist &=
   ## String appearing when a hyphenation break does not occur
   attribute no { text }?

hyphen.attlist &=
   ## String inserted after the hyphenation character when a hyphenation break occurs
   attribute post { text }?

non-eol-words =
   ## Non-end-of-line words separated by white space
   element non-eol-words {
      non-eol-words.attlist,
      text
}

non-eol-words.attlist &= empty

hyphen-min =
  ## Minimum number of characters in a hyphenated word before or after the hyphenation character
  element hyphen-min {
    hyphen-min.attlist,
    hyphen-min.model
  }

hyphen-min.model =
  empty

hyphen-min.attlist =
  ## Minimum number of characters in a hyphenated word before the hyphenation character
  attribute before { xsd:positiveInteger }?,
  ## Minimum number of characters in a hyphenated word after the hyphenation character
  attribute after { xsd:positiveInteger }?

classes =
  ## Character equivalent classes
  element classes { text }

patterns =
  ## Hyphenation patterns, space separated
  element patterns { text }
